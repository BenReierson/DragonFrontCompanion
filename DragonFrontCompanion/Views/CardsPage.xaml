<?xml version="1.0" encoding="utf-8"?>
<views:BaseContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:views="clr-namespace:DragonFrontCompanion.Views"
                       xmlns:vm="clr-namespace:DragonFrontCompanion.ViewModels"
                       xmlns:controls="clr-namespace:DragonFrontCompanion.Controls;assembly=DragonFrontCompanion"
                       xmlns:models="clr-namespace:DragonFrontDb;assembly=DragonFrontDb"
                       x:Class="DragonFrontCompanion.Views.CardsPage"
                       x:TypeArguments="vm:CardsViewModel" 
                       x:DataType="vm:CardsViewModel"
                       Title="{Binding Title}"
                       BackgroundColor="#E1CA35"
                       x:Name="CurrentPage">
    <ContentPage.ToolbarItems>
        <ToolbarItem
            x:Name="DeckFilterButton"
            Command="{Binding DeckFilterCommand}"
            Text="{Binding ChooserFilterText}" />
        <ToolbarItem
            x:Name="ResetFiltersButton"
            Command="{Binding ResetFiltersCommand}"
            Text="{Binding ResetFilterText}" />
        <ToolbarItem
            x:Name="FiltersButton"
            AutomationId="FilterButton"
            IconImageSource="{OnPlatform Default='iconfilter.png', Android={x:Null}}"
            Text="Filters"
            Command="{Binding ToggleFiltersCommand}"/>
    </ContentPage.ToolbarItems>
    <Grid BackgroundColor="#123338"
          RowSpacing="0"
          RowDefinitions="40,Auto,Auto,*">
        <StackLayout Grid.Row="0"
            BackgroundColor="#E1CA35"
            HorizontalOptions="FillAndExpand"
            Orientation="Horizontal">
            <Image
                Margin="5"
                HeightRequest="20"
                HorizontalOptions="Start"
                Source="search.png"
                VerticalOptions="Center"
                WidthRequest="20" />
            <Entry
                x:Name="SearchBox"
                BackgroundColor="#E1CA35"
                HorizontalOptions="FillAndExpand"
                Placeholder="search"
                PlaceholderColor="#66123338"
                Text="{Binding SearchText, Mode=TwoWay}"
                TextColor="#123338" />
        </StackLayout>
        <Label Grid.Row="1"
            x:Name="DeckStatusLabel"
            BackgroundColor="Black"
            FontSize="12"
            IsVisible="{Binding IsChooser}"
            LineBreakMode="NoWrap"
            Text="{Binding DeckStatus}"
            TextColor="White"
            HorizontalTextAlignment="Center" />
        <Label Grid.Row="2"
            x:Name="MessageLabel"
            BackgroundColor="Black"
            FontSize="Small"
            IsVisible="{Binding IsChooser}"
            LineBreakMode="NoWrap"
            Text="{Binding Message}"
            TextColor="Gray"
            HorizontalTextAlignment="Center" />

        <ListView Grid.Row="3"
            x:Name="CardsList"
            BackgroundColor="#123338"
            ItemsSource="{Binding FilteredCards}"
            SelectedItem="{Binding SelectedCard, Mode=TwoWay}"
            CachingStrategy="RecycleElement"
            SelectionMode="Single"
            RowHeight="104">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:Card">
                    <ViewCell>
                        <ViewCell.ContextActions>
                            <MenuItem
                                Command="{Binding BindingContext.FindSimilarCommand, Source={x:Reference Name=CurrentPage}}"
                                CommandParameter="{Binding .}"
                                Text="Find Similar" />
                        </ViewCell.ContextActions>
                        <Grid HeightRequest="104"
                              Padding="0,2">
                            <controls:CardControl />
                            <controls:CardCount
                                Margin="30"
                                Card="{Binding .}"
                                CardGroups="{Binding BindingContext.CurrentDeck.DistinctDictionary, Source={x:Reference Name=CurrentPage}}"
                                HeightRequest="40"
                                HorizontalOptions="Start"
                                IsVisible="{Binding BindingContext.IsChooser, Source={x:Reference Name=CurrentPage}}"
                                VerticalOptions="Center"
                                WidthRequest="40"/>
                            <Grid
                                x:Name="EditCardButtons"
                                Margin="105,0,0,0"
                                IsVisible="{Binding BindingContext.IsChooser, Source={x:Reference Name=CurrentPage}}"
                                ColumnDefinitions="40,40"
                                HeightRequest="40"
                                VerticalOptions="End">
                                <Button
                                    BackgroundColor="#E1CA35"
                                    Command="{Binding BindingContext.RemoveCardCommand, Source={x:Reference Name=CurrentPage}}"
                                    CommandParameter="{Binding .}"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Center"
                                    FontAttributes="Bold"
                                    FontSize="26"
                                    Scale=".8"
                                    Text="-"
                                    TextColor="Red"
                                    Margin="4"
                                    WidthRequest="32"
                                    HeightRequest="32"
                                    CornerRadius="0"
                                    Padding="0">
                                    <Button.Triggers>
                                        <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                        </Trigger>
                                        <Trigger TargetType="Button" Property="IsEnabled" Value="True">
                                            <Setter Property="BackgroundColor" Value="#E1CA35" />
                                        </Trigger>
                                    </Button.Triggers>
                                </Button>
                                <Button Grid.Column="1"
                                    BackgroundColor="#E1CA35"
                                    Command="{Binding BindingContext.AddOneToDeckCommand, Source={x:Reference Name=CurrentPage}}"
                                    CommandParameter="{Binding .}"
                                    Scale=".8"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Center"
                                    FontAttributes="Bold"
                                    FontSize="26"
                                    Text="+"
                                    TextColor="Green"
                                    Margin="4"
                                    HeightRequest="32"
                                    WidthRequest="32"
                                    CornerRadius="0"
                                    Padding="0">
                                    <Button.Triggers>
                                        <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                        </Trigger>
                                        <Trigger TargetType="Button" Property="IsEnabled" Value="True">
                                            <Setter Property="BackgroundColor" Value="#E1CA35" />
                                        </Trigger>
                                    </Button.Triggers>
                                </Button>
                            </Grid>
                        </Grid>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        
        <ActivityIndicator Grid.Row="3"
                           Color="#E1CA35"
                           HorizontalOptions="Center" VerticalOptions="Center"
                           IsRunning="{Binding IsBusy}" IsVisible="{Binding IsBusy}" />
        
        <ContentView Grid.RowSpan="4" x:Name="CardDetailLayout"
                     Margin="0,-60,0,0"
                     BackgroundColor="#B3000000"
                     IsVisible="{Binding SelectedCard, Converter={StaticResource VisibleWithValue}}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding CloseCardCommand}" />
            </ContentView.GestureRecognizers>
            <controls:CardDetail Card="{Binding SelectedCard}"
                                 CloseCommand="{Binding CloseCardCommand}"
                                 NextCommand="{Binding NextCardCommand}"
                                 PreviousCommand="{Binding PreviousCardCommand}"
                                 VerticalOptions="Center"
                                 HorizontalOptions="Center"
                                 WidthRequest="400"/>
        </ContentView>
        
        <controls:CardTypeFilter Grid.Row="3"
                                       IsVisible="{Binding IsFiltersVisible}">
            <ContentView.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ToggleFiltersCommand}" />
            </ContentView.GestureRecognizers>
        </controls:CardTypeFilter>
    </Grid>
</views:BaseContentPage>